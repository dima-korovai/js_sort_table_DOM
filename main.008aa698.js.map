{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","sortList","colNum","type","tbody","rowsArray","Array","from","rows","sort","rowA","rowB","cells","innerHTML","localeCompare","valuesToNumber","string","replace","slice","append","addEventListener","ev","th","target","tagName","cellIndex","dataset"],"mappings":";AAAA,aAwCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAtCD,IAAMA,EAAQC,SAASC,cAAc,SAWrC,SAASC,EAASC,EAAQC,GAClBC,IAAAA,EAAQN,EAAME,cAAc,SAE5BK,EAAYC,MAAMC,KAAKH,EAAMI,MAsBnCH,EAAUI,KApBM,SAASC,EAAMC,GACrBR,OAAAA,GACD,IAAA,SACIO,OAAAA,EAAKE,MAAMV,GAAQW,UACvBC,cAAcH,EAAKC,MAAMV,GAAQW,WAEjC,IAAA,SACIH,OAAAA,EAAKE,MAAMV,GAAQW,UACxBF,EAAKC,MAAMV,GAAQW,UAElB,IAAA,SACIE,OAAAA,EAAeL,EAAKE,MAAMV,GAAQW,WACvCE,EAAeJ,EAAKC,MAAMV,GAAQW,WAG/BE,SAAAA,EAAeC,GACfA,OAAAA,EAAOC,QAAQ,IAAK,KAAKC,MAAM,MAK1Cd,EAAMe,OAANf,MAAAA,EAAgBC,EAAAA,IAnClBP,EAAMsB,iBAAiB,QAAS,SAASC,GACjCC,IAAAA,EAAKD,EAAGE,OAEK,OAAfD,EAAGE,SAGPvB,EAASqB,EAAGG,UAAWH,EAAGI,QAAQvB","file":"main.008aa698.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\n\ntable.addEventListener('click', function(ev) {\n  const th = ev.target;\n\n  if (th.tagName !== 'TH') {\n    return;\n  }\n  sortList(th.cellIndex, th.dataset.type);\n});\n\nfunction sortList(colNum, type) {\n  const tbody = table.querySelector('tbody');\n\n  const rowsArray = Array.from(tbody.rows);\n\n  const compare = function(rowA, rowB) {\n    switch (type) {\n      case 'string':\n        return rowA.cells[colNum].innerHTML\n          .localeCompare(rowB.cells[colNum].innerHTML);\n\n      case 'number':\n        return rowA.cells[colNum].innerHTML\n        - rowB.cells[colNum].innerHTML;\n\n      case 'salary':\n        return valuesToNumber(rowA.cells[colNum].innerHTML)\n        - valuesToNumber(rowB.cells[colNum].innerHTML);\n    }\n\n    function valuesToNumber(string) {\n      return string.replace(',', '.').slice(1);\n    }\n  };\n\n  rowsArray.sort(compare);\n  tbody.append(...rowsArray);\n}\n"]}